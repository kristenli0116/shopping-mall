<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.api.dao.ProductMapper">
    <resultMap id="BaseResultMap" type="com.study.api.entity.Product">
        <id column="product_id" jdbcType="VARCHAR" property="productId"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
        <result column="root_category_id" jdbcType="INTEGER" property="rootCategoryId"/>
        <result column="sold_num" jdbcType="INTEGER" property="soldNum"/>
        <result column="product_status" jdbcType="INTEGER" property="productStatus"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>

    <resultMap id="BaseResultMap2" type="com.study.api.entity.Product">
        <id column="product_id" jdbcType="VARCHAR" property="productId"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
        <result column="root_category_id" jdbcType="INTEGER" property="rootCategoryId"/>
        <result column="sold_num" jdbcType="INTEGER" property="soldNum"/>
        <result column="product_status" jdbcType="INTEGER" property="productStatus"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
        <collection property="imgs" column="product_id"
                    select="com.study.api.dao.ProductImgMapper.selectProductImgByProductId">
        </collection>
    </resultMap>
    <select id="selectRecommendProducts" resultMap="BaseResultMap2">
        select product_id,
               product_name,
               category_id,
               root_category_id,
               sold_num,
               product_status,
               content,
               create_time,
               update_time
        from db2022.product
        ORDER BY create_time DESC
        LIMIT 0,3
    </select>

    <resultMap id="BaseResultMap3" type="com.study.api.entity.ProductVO">
        <id column="product_id" jdbcType="VARCHAR" property="productId"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
        <result column="root_category_id" jdbcType="INTEGER" property="rootCategoryId"/>
        <result column="sold_num" jdbcType="INTEGER" property="soldNum"/>
        <result column="product_status" jdbcType="INTEGER" property="productStatus"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
        <collection property="imgs" column="product_id"
                    select="com.study.api.dao.ProductImgMapper.selectProductImgByProductId">
        </collection>
    </resultMap>
    <select id="selectTop6ByCategory" resultMap="BaseResultMap3">
        select product_id,
               product_name,
               category_id,
               root_category_id,
               sold_num,
               product_status,
               content,
               create_time,
               update_time
        from db2022.product
        where root_category_id = #{cid}
        order by sold_num desc
        limit 0,6
    </select>

    <resultMap id="BaseResultMap4" type="com.study.api.entity.ProductVO">
        <id column="product_id" jdbcType="VARCHAR" property="productId"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
        <result column="root_category_id" jdbcType="INTEGER" property="rootCategoryId"/>
        <result column="sold_num" jdbcType="INTEGER" property="soldNum"/>
        <result column="product_status" jdbcType="INTEGER" property="productStatus"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
        <collection property="imgs" column="product_id"
                    select="com.study.api.dao.ProductImgMapper.selectProductImgByProductId"/>
        <collection property="skus" column="product_id"
                    select="com.study.api.dao.ProductSkuMapper.selectLowestPriceByProductId"/>
    </resultMap>
    <select id="selectProductByCategoryId" resultMap="BaseResultMap4">
        select product_id,
               product_name,
               category_id,
               root_category_id,
               sold_num,
               product_status,
               content,
               create_time,
               update_time
        from db2022.product
        where category_id = #{cid}
        limit #{start},#{limit}
    </select>

    <select id="selectBrandByCategoryId" resultSets="java.util.List" resultType="String">
        select distinct brand
        from db2022.product_params
        where product_id in (
            select product_id
            from db2022.product
            where category_id = #{cid}
        );
    </select>

    <select id="selectProductByKeyword" resultMap="BaseResultMap4">
        select product_id,
               product_name,
               category_id,
               root_category_id,
               sold_num,
               product_status,
               content,
               create_time,
               update_time
        from db2022.product
        where product_name like #{kw}
        limit #{start},#{limit}
    </select>

    <select id="selectBrandByKeyword" resultSets="java.util.List" resultType="java.lang.String">
        select distinct brand
        from db2022.product_params
        where product_id in (
            select product_id
            from db2022.product
            where product_name like #{kw}
        )
    </select>

</mapper>